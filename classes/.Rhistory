fill = paletteHere) #symbols' colors
# MANAGING THE LEGEND:
pie(x=ToPlot,#table
col = paletteHere,
labels = plotLabels,
main=titleText,
sub=sourceText)
#legend
legend(x="right", #where
legend=names(ToPlot), #text
fill = paletteHere,
bty = 'n', # no box
cex = 0.5  # shrink
) #symbols' colors
# barplot plots the table too
barplot(ToPlot,
col = paletteHere,
main=titleText,
sub=sourceText)
paletteHereNew=c('gray') # just one color
# plotting
barplot(ToPlot,
col = paletteHereNew,
border=NA, #no border
main=titleText,
sub=sourceText,
ylim=c(0,50),
ylab = '(in %)' # show unit
)
# plotting
location=barplot(ToPlot,
col = paletteHereNew,
border=NA,
main=titleText,
sub=sourceText,
ylim=c(0,50),
ylab = '(in %)')
#annotating
text(x=location,y=ToPlot,labels=plotLabels,
pos = 1,# if pos=3, text will be on top of bar
cex = 0.8)
# plotting
location=barplot(ToPlot,
col = paletteHereNew,
border=NA,
main=titleText,
sub=sourceText,
ylim=c(0,50),
ylab = '(in %)',
horiz = T) # ORIENTATION
#annotating
text(x=location,y=ToPlot,labels=plotLabels,
pos = 1) # this is the position of the label
location=barplot(ToPlot,
col = paletteHereNew,
border=NA,
main=titleText,
sub=sourceText,
xlim=c(0,50), #change to xlim
xlab = '(in %)', #change to xlab
horiz = T)
#annotating
text(x=ToPlot,y=location, #change of x and y
labels=plotLabels,
pos = 4)  # change position of the label
location=barplot(ToPlot,
col = paletteHereNew,
border=NA,
main=titleText,
sub=sourceText,
cex.names = 0.7, #shrink category names
xlim=c(0,50),
xlab = '(in %)',
horiz = T)
#annotating
text(x=ToPlot,y=location,labels=plotLabels,pos = 4)
location=barplot(ToPlot,
col = paletteHereNew,
border=NA,
main=titleText, # no sub here!
xlim=c(0,50),
cex.names = 0.5,
xlab = '(in %)',
horiz = T)
# annotating
text(x=ToPlot,y=location,labels=plotLabels,pos = 4)
# subtitle
title(sub=sourceText,
adj=0,#adj=1 aligns to rigth.
cex.sub=0.7) #shrinking text
# changing parameters
# (distanceOfUnit To plot,
# distanceOfAxislabels to plot,
# distance ofTicks to plot)
# default is: mgp=c(3, 1, 0)
par(mgp=c(0.5,0.5,0))
#####
location=barplot(ToPlot,
col = paletteHereNew,
border=NA,
main=titleText,
xlim=c(0,50),
xlab = '(in %)',
cex.names = 0.6,
cex.lab=0.6, # shrinking label text
horiz = T)
text(x=ToPlot,y=location,labels=plotLabels,pos = 4)
title(sub=sourceText, adj=0,cex.sub=0.7,
line = 3) #push the text down
titleText2='Are all locations getting a fair share of public schools in WA?'
par(mgp=c(1,0.5,0))
location=barplot(ToPlot,
col = paletteHereNew,
border=NA,
main=titleText2,
xlim=c(0,50),
cex.names = 0.6,
cex.lab=0.6,
xlab = '(in %)',
horiz = T
)
text(x=ToPlot,y=location,labels=plotLabels,pos = 4)
title(sub=sourceText, adj=0,cex.sub=0.7,
line = 3)
# reference line
abline(v=25,#position vertical
lty=3,#type
lwd=3)#width
par(mgp=c(1,0.5,0))
location=barplot(ToPlot,
col = paletteHereNew,
border=NA,
main=titleText2,
xlim=c(0,50),
xlab = '(in %)',
cex.names=0.6,
cex.lab=0.6,
las=2, #label names horizontal
horiz = T,
xaxt="n") # no x-axis, so I customize it below...
text(x=ToPlot,
y=location,
labels=plotLabels,
pos = 4, #label position
cex = 0.7) #label text size
title(sub=sourceText,
adj=0, #position of subtitle (source)
cex.sub=0.7, #size of text
line = 3) #distance from base of plot
#reference line
abline(v=25,
lty=3, #line type
lwd=3) #line width
# customizing tick values
newXvalues<-c(0,10,25,40,50) # you just want to show this on the axis
axis(side=1,
at=newXvalues,
labels = newXvalues,
cex.axis=0.8) #size of text on axis
tableFreq=as.data.frame(ToPlot)
names(tableFreq)=c("locale","pct")
#you have:
tableFreq
library(ggplot2)
#base GGPLOT2 starts with a "base", telling WHAT VARIABLES TO PLOT
tableFreq$locale <- factor(tableFreq$locale, levels = tableFreq$locale[order(-tableFreq$pct)])
base= ggplot(data = tableFreq,
aes(x = locale,
y = pct))
plot1 = base + geom_bar(fill ="gray",
stat = "identity") # y is just what it is!
plot1
plot2 = plot1 + labs(title=titleText2,
x =NULL,
y = NULL,
caption = sourceText)
plot2
plot3 = plot2 + geom_hline(yintercept = 25, #where
linetype="dashed",
size=1.5, #thickness
alpha=0.5) #transparency
plot3
library(scales)
# customize Y axis
plot4 = plot3 + scale_y_continuous(breaks=c(0,10, 25,40,50),
limits = c(0, 50), # expand = c(0, 0),
labels=scales::unit_format(suffix = '%'))
plot4
plot5 = plot4 + theme(panel.background = element_rect(fill = "white",
colour = "grey50"),
plot.caption = element_text(hjust = 0), # default was 1
plot.title = element_text(hjust = 0.5))
plot5
plot6 = plot5 + geom_text(aes(y = pct ,
label = paste0(round(pct,2), '%')),
vjust=1, # if flipping 'hjust'
hjust=-0.25,
size = 3)
# wanna flip the plot?
plot6 + coord_flip()
###
ToPlotOrd=sort(ToPlot, decreasing = TRUE)
plotLabels=paste0(round(ToPlotOrd,2),'%') # labels for the slices
###
par(mgp=c(1,0.5,0)) # distance label, tickText,tick
location=barplot(ToPlotOrd,
col = paletteHereNew,
border=NA,
main=titleText2,
xlim=c(0,50),
xlab = '(in %)',
horiz = T,
las = 2,
cex.names = 0.7,
cex.lab=0.6,
xaxt="n") # no x-axis, so I customize it below...
text(x=ToPlotOrd,y=location,labels=plotLabels,pos = 4,cex = 0.7)
title(sub=sourceText, adj=0,cex.sub=0.7,line = 3)
# reference line
abline(v=25,lty=3,lwd=3)
# customizong tick values
xtick<-c(0,10,25,40,50)
axis(side=1, at=xtick, labels = xtick,cex.axis=0.8)
tableFreq[order(-tableFreq$pct),]
rm(list=ls())
link='https://github.com/EvansDataScience/VisualAnalytics_2_tabularData/raw/master/data/eduwa.rda'
#getting the data TABLE from the file in the cloud:
load(file=url(link))
#number of rows and columns
dim(eduwa) #nrow(eduwa) ncol(eduwa)
names(eduwa)
# this 'width = 70,strict.width='cut' means
# you do not want to see more than 70 characters per row.
str(eduwa,width = 70,strict.width='cut')
head(eduwa$LocaleType,50) #first fifty values
# absolute values
table(eduwa$LocaleType,exclude = 'nothing')
# relative values
absoluteT=table(eduwa$LocaleType,exclude = 'nothing')
prop.table(absoluteT)
# the pie plots the table:
ToPlot=prop.table(absoluteT)
pie(ToPlot)
names(ToPlot)
names(ToPlot)[5]='Unknown'
# the pie plots the table:
titleText='Where are Public Schools located in WA in 2019?'
sourceText='Source: US Department of Education'
pie(ToPlot,
main=titleText,
sub=sourceText)
# the pie plots the table:
titleText2='WA still has schools locations unknown \n (info from 2018)'
pie(ToPlot,
main=titleText2,
sub=sourceText)
# the pie plots the table:
titleText3='WA needs to fully categorize school locations\n(info from 2018)'
pie(ToPlot,
main=titleText3,
sub=sourceText)
ToPlot*100
# details:
ToPlot=ToPlot*100 # preparing labels
paletteHere=rainbow(length(ToPlot)) # customizing set of colors
# plotting
pie(x=ToPlot,#table
col = paletteHere,
labels = ToPlot,
main=titleText,
sub=sourceText)
paste0(round(ToPlot,2),'%')
plotLabels=paste0(round(ToPlot,2),'%') # labels for the slices
# plotting
pie(x=ToPlot,#table
col = paletteHere,
labels = plotLabels,
main=titleText,
sub=sourceText)
# plotting
pie(x=ToPlot,#table
col = paletteHere,
labels = plotLabels,
main=titleText,
sub=sourceText)
#legend
legend(x="right", #where
legend=names(ToPlot), #text
fill = paletteHere) #symbols' colors
# MANAGING THE LEGEND:
pie(x=ToPlot,#table
col = paletteHere,
labels = plotLabels,
main=titleText,
sub=sourceText)
#legend
legend(x="right", #where
legend=names(ToPlot), #text
fill = paletteHere,
bty = 'n', # no box
cex = 0.5  # shrink
) #symbols' colors
# barplot plots the table too
barplot(ToPlot,
col = paletteHere,
main=titleText,
sub=sourceText)
paletteHereNew=c('gray') # just one color
# plotting
barplot(ToPlot,
col = paletteHereNew,
border=NA, #no border
main=titleText,
sub=sourceText,
ylim=c(0,50),
ylab = '(in %)' # show unit
)
# plotting
location=barplot(ToPlot,
col = paletteHereNew,
border=NA,
main=titleText,
sub=sourceText,
ylim=c(0,50),
ylab = '(in %)')
#annotating
text(x=location,y=ToPlot,labels=plotLabels,
pos = 1,# if pos=3, text will be on top of bar
cex = 0.8)
# plotting
location=barplot(ToPlot,
col = paletteHereNew,
border=NA,
main=titleText,
sub=sourceText,
ylim=c(0,50),
ylab = '(in %)',
horiz = T) # ORIENTATION
#annotating
text(x=location,y=ToPlot,labels=plotLabels,
pos = 1) # this is the position of the label
location=barplot(ToPlot,
col = paletteHereNew,
border=NA,
main=titleText,
sub=sourceText,
xlim=c(0,50), #change to xlim
xlab = '(in %)', #change to xlab
horiz = T)
#annotating
text(x=ToPlot,y=location, #change of x and y
labels=plotLabels,
pos = 4)  # change position of the label
location=barplot(ToPlot,
col = paletteHereNew,
border=NA,
main=titleText,
sub=sourceText,
cex.names = 0.7, #shrink category names
xlim=c(0,50),
xlab = '(in %)',
horiz = T)
#annotating
text(x=ToPlot,y=location,labels=plotLabels,pos = 4)
location=barplot(ToPlot,
col = paletteHereNew,
border=NA,
main=titleText, # no sub here!
xlim=c(0,50),
cex.names = 0.5,
xlab = '(in %)',
horiz = T)
# annotating
text(x=ToPlot,y=location,labels=plotLabels,pos = 4)
# subtitle
title(sub=sourceText,
adj=0,#adj=1 aligns to rigth.
cex.sub=0.7) #shrinking text
# changing parameters
# (distanceOfUnit To plot,
# distanceOfAxislabels to plot,
# distance ofTicks to plot)
# default is: mgp=c(3, 1, 0)
par(mgp=c(0.5,0.5,0))
#####
location=barplot(ToPlot,
col = paletteHereNew,
border=NA,
main=titleText,
xlim=c(0,50),
xlab = '(in %)',
cex.names = 0.6,
cex.lab=0.6, # shrinking label text
horiz = T)
text(x=ToPlot,y=location,labels=plotLabels,pos = 4)
title(sub=sourceText, adj=0,cex.sub=0.7,
line = 3) #push the text down
titleText2='Are all locations getting a fair share of public schools in WA?'
par(mgp=c(1,0.5,0))
location=barplot(ToPlot,
col = paletteHereNew,
border=NA,
main=titleText2,
xlim=c(0,50),
cex.names = 0.6,
cex.lab=0.6,
xlab = '(in %)',
horiz = T
)
text(x=ToPlot,y=location,labels=plotLabels,pos = 4)
title(sub=sourceText, adj=0,cex.sub=0.7,
line = 3)
# reference line
abline(v=25,#position vertical
lty=3,#type
lwd=3)#width
par(mgp=c(1,0.5,0))
location=barplot(ToPlot,
col = paletteHereNew,
border=NA,
main=titleText2,
xlim=c(0,50),
xlab = '(in %)',
cex.names=0.6,
cex.lab=0.6,
las=2, #label names horizontal
horiz = T,
xaxt="n") # no x-axis, so I customize it below...
text(x=ToPlot,
y=location,
labels=plotLabels,
pos = 4, #label position
cex = 0.7) #label text size
title(sub=sourceText,
adj=0, #position of subtitle (source)
cex.sub=0.7, #size of text
line = 3) #distance from base of plot
#reference line
abline(v=25,
lty=3, #line type
lwd=3) #line width
# customizing tick values
newXvalues<-c(0,10,25,40,50) # you just want to show this on the axis
axis(side=1,
at=newXvalues,
labels = newXvalues,
cex.axis=0.8) #size of text on axis
tableFreq=as.data.frame(ToPlot)
names(tableFreq)=c("locale","pct")
#you have:
tableFreq
library(ggplot2)
#base GGPLOT2 starts with a "base", telling WHAT VARIABLES TO PLOT
tableFreq$locale <- factor(tableFreq$locale, levels = tableFreq$locale[order(-tableFreq$pct)])
base= ggplot(data = tableFreq,
aes(x = locale,
y = pct))
plot1 = base + geom_bar(fill ="gray",
stat = "identity") # y is just what it is!
plot1
plot2 = plot1 + labs(title=titleText2,
x =NULL,
y = NULL,
caption = sourceText)
plot2
plot3 = plot2 + geom_hline(yintercept = 25, #where
linetype="dashed",
size=1.5, #thickness
alpha=0.5) #transparency
plot3
library(scales)
# customize Y axis
plot4 = plot3 + scale_y_continuous(breaks=c(0,10, 25,40,50),
limits = c(0, 50), # expand = c(0, 0),
labels=scales::unit_format(suffix = '%'))
plot4
plot5 = plot4 + theme(panel.background = element_rect(fill = "white",
colour = "grey50"),
plot.caption = element_text(hjust = 0), # default was 1
plot.title = element_text(hjust = 0.5))
plot5
plot6 = plot5 + geom_text(aes(y = pct ,
label = paste0(round(pct,2), '%')),
vjust=1, # if flipping 'hjust'
hjust=-0.25,
size = 3)
# wanna flip the plot?
plot6 + coord_flip()
###
ToPlotOrd=sort(ToPlot, decreasing = TRUE)
plotLabels=paste0(round(ToPlotOrd,2),'%') # labels for the slices
###
par(mgp=c(1,0.5,0)) # distance label, tickText,tick
location=barplot(ToPlotOrd,
col = paletteHereNew,
border=NA,
main=titleText2,
xlim=c(0,50),
xlab = '(in %)',
horiz = T,
las = 2,
cex.names = 0.7,
cex.lab=0.6,
xaxt="n") # no x-axis, so I customize it below...
text(x=ToPlotOrd,y=location,labels=plotLabels,pos = 4,cex = 0.7)
title(sub=sourceText, adj=0,cex.sub=0.7,line = 3)
# reference line
abline(v=25,lty=3,lwd=3)
# customizong tick values
xtick<-c(0,10,25,40,50)
axis(side=1, at=xtick, labels = xtick,cex.axis=0.8)
tableFreq[order(-tableFreq$pct),]
