#base GGPLOT2 starts with a "base", telling WHAT VARIABLES TO PLOT
tableFreqOrd = tableFreq[order(-tableFreq$pct),]
base= ggplot(tableFreqOrd,
aes(locale,pct))
plot1 = base + geom_bar(fill ="gray",
stat = 'identity') # y is just what it is!
plot1
base = ggplot(tableFreq, aes(x=locale,pct))
lolliplot1=base + geom_segment(aes(y = 0,
x = locale,
yend = pct,
xend = locale), color = "grey50")
lolliplot1 + geom_point()
tableFreq[order(tableFreq$pct),]
# reordering DF steps:
tableFreqO=tableFreq[order(tableFreq$pct),]
base = ggplot(tableFreqO, aes(locale,pct))
lolliplot1=base + geom_segment(aes(y = 0,
x = locale,
yend = pct,
xend = locale), color = "gray")
lolliplot2 = lolliplot1 + geom_point()
lolliplot2 + scale_x_discrete(limits=tableFreqO$locale) # key element
#base GGPLOT2 starts with a "base", telling WHAT VARIABLES TO PLOT
tableFreqOrd = tableFreq[order(-tableFreq$pct),]
base= ggplot(data = tableFreqOrd,
aes(x = locale,
y = 0))
plot1 = base + geom_bar(fill ="gray",
stat = 'identity') # y is just what it is!
plot1
View(tableFreqOrd)
tableFreq=as.data.frame(ToPlot)
names(tableFreq)=c("locale","pct")
#you have:
tableFreq
library(ggplot2)
#base GGPLOT2 starts with a "base", telling WHAT VARIABLES TO PLOT
tableFreqOrd = tableFreq[order(-tableFreq$pct),]
base= ggplot(data = tableFreqOrd,
aes(x = locale,
y = pct))
plot1 = base + geom_bar(fill ="gray",
stat = 'identity') # y is just what it is!
plot1
plot1 = base + geom_bar(fill ="gray",
stat = pct) # y is just what it is!
plot1 = base + geom_bar(fill ="gray",
stat = tableFreq$pct) # y is just what it is!
plot1 = base + geom_bar(fill ="gray",
stat = "identity") # y is just what it is!
plot1
?geom_bar
plot1 = base + geom_bar(data = tableFreqOrd, fill ="gray",
stat = "identity") # y is just what it is!
plot1
plot1 = base + geom_bar(data = tableFreqOrd$pct, fill ="gray",
stat = "identity") # y is just what it is!
plot1 = base + geom_bar(fill ="gray",
stat = "identity") # y is just what it is!
plot1
#base GGPLOT2 starts with a "base", telling WHAT VARIABLES TO PLOT
tableFreqOrd = tableFreq[order(-tableFreq$pct),]
base= ggplot(data = tableFreqOrd,
aes(x = reorder(locale, -pct),
y = pct))
plot1 = base + geom_bar(fill ="gray",
stat = "identity") # y is just what it is!
plot1
tableFreq=as.data.frame(ToPlot)
names(tableFreq)=c("locale","pct")
#you have:
tableFreq
library(ggplot2)
#base GGPLOT2 starts with a "base", telling WHAT VARIABLES TO PLOT
#tableFreqOrd = tableFreq[order(-tableFreq$pct),]
base= ggplot(data = tableFreqOrd,
aes(x = order(locale, -pct),
y = pct))
plot1 = base + geom_bar(fill ="gray",
stat = "identity") # y is just what it is!
plot1
#base GGPLOT2 starts with a "base", telling WHAT VARIABLES TO PLOT
#tableFreqOrd = tableFreq[order(-tableFreq$pct),]
base= ggplot(data = tableFreqOrd,
aes(x = reorder(locale, -pct),
y = pct))
plot1 = base + geom_bar(fill ="gray",
stat = "identity") # y is just what it is!
plot1
tableFreq=as.data.frame(ToPlot)
names(tableFreq)=c("locale","pct")
#you have:
tableFreq
library(ggplot2)
#base GGPLOT2 starts with a "base", telling WHAT VARIABLES TO PLOT
#tableFreqOrd = tableFreq[order(-tableFreq$pct),]
base= ggplot(data = tableFreq[order(-tableFreq$pct),],
aes(x = locale,
y = pct))
plot1 = base + geom_bar(fill ="gray",
stat = "identity") # y is just what it is!
plot1
#base GGPLOT2 starts with a "base", telling WHAT VARIABLES TO PLOT
#tableFreqOrd = tableFreq[order(-tableFreq$pct),]
base= ggplot(data = tableFreq,
aes(x = reorder(locale, -pct),
y = pct))
plot1 = base + geom_bar(fill ="gray",
stat = "identity") # y is just what it is!
plot1
plot2 = plot1 + labs(title=titleText2,
x =NULL,
y = NULL,
caption = sourceText)
plot2
plot3 = plot2 + geom_hline(yintercept = 25, #where
linetype="dashed",
size=1.5, #thickness
alpha=0.5) #transparency
plot3
library(scales)
# customize Y axis
plot4 = plot3 + scale_y_continuous(breaks=c(0,10, 25,40,50),
limits = c(0, 50), # expand = c(0, 0),
labels=scales::unit_format(suffix = '%'))
plot4
plot5 = plot4 + theme(panel.background = element_rect(fill = "white",
colour = "grey50"),
plot.caption = element_text(hjust = 0), # default was 1
plot.title = element_text(hjust = 0.5))
plot5
plot6 = plot5 + geom_text(aes(y = pct ,
label = paste0(round(pct,2), '%')),
vjust=1, # if flipping 'hjust'
size = 3)
# wanna flip the plot?
plot6 + coord_flip()
###
ToPlotOrd=sort(ToPlot)
###
par(mgp=c(1,0.5,0)) # distance label, tickText,tick
location=barplot(ToPlotOrd,
col = paletteHereNew,
border=NA,
main=titleText2,
xlim=c(0,50),
xlab = '(in %)',
horiz = T,
cex.names = 0.7,
cex.lab=0.6,
xaxt="n") # no x-axis, so I customize it below...
text(x=ToPlotOrd,y=location,labels=plotLabels,pos = 2,cex = 0.7)
title(sub=sourceText, adj=0,cex.sub=0.7,line = 3)
# reference line
abline(v=25,lty=3,lwd=3)
# customizong tick values
xtick<-c(0,10,25,40,50)
axis(side=1, at=xtick, labels = xtick,cex.axis=0.8)
#base GGPLOT2 starts with a "base", telling WHAT VARIABLES TO PLOT
#tableFreqOrd = tableFreq[order(-tableFreq$pct),]
base= ggplot(data = tableFreq,
aes(x = reorder(locale, pct),
y = pct))
plot1 = base + geom_bar(fill ="gray",
stat = "identity") # y is just what it is!
plot1
plot2 = plot1 + labs(title=titleText2,
x =NULL,
y = NULL,
caption = sourceText)
plot2
plot3 = plot2 + geom_hline(yintercept = 25, #where
linetype="dashed",
size=1.5, #thickness
alpha=0.5) #transparency
plot3
library(scales)
# customize Y axis
plot4 = plot3 + scale_y_continuous(breaks=c(0,10, 25,40,50),
limits = c(0, 50), # expand = c(0, 0),
labels=scales::unit_format(suffix = '%'))
plot4
plot5 = plot4 + theme(panel.background = element_rect(fill = "white",
colour = "grey50"),
plot.caption = element_text(hjust = 0), # default was 1
plot.title = element_text(hjust = 0.5))
plot5
plot6 = plot5 + geom_text(aes(y = pct ,
label = paste0(round(pct,2), '%')),
vjust=1, # if flipping 'hjust'
size = 3)
# wanna flip the plot?
plot6 + coord_flip()
plot6 = plot5 + geom_text(aes(y = pct ,
label = paste0(round(pct,2), '%')),
vjust=2, # if flipping 'hjust'
size = 3)
# wanna flip the plot?
plot6 + coord_flip()
plot6 = plot5 + geom_text(aes(y = pct ,
label = paste0(round(pct,2), '%')),
vjust=1, # if flipping 'hjust'
size = 3)
# wanna flip the plot?
plot6 + coord_flip()
plot6 = plot5 + geom_text(aes(y = pct ,
label = paste0(round(pct,2), '%')),
vjust=1, # if flipping 'hjust'
hjust=1
size = 3)
plot6 = plot5 + geom_text(aes(y = pct ,
label = paste0(round(pct,2), '%')),
vjust=1, # if flipping 'hjust'
hjust=1,
size = 3)
# wanna flip the plot?
plot6 + coord_flip()
plot6 = plot5 + geom_text(aes(y = pct ,
label = paste0(round(pct,2), '%')),
vjust=1, # if flipping 'hjust'
hjust=4,
size = 3)
# wanna flip the plot?
plot6 + coord_flip()
plot6 = plot5 + geom_text(aes(y = pct ,
label = paste0(round(pct,2), '%')),
vjust=1, # if flipping 'hjust'
hjust=0,
size = 3)
# wanna flip the plot?
plot6 + coord_flip()
plot6 = plot5 + geom_text(aes(y = pct ,
label = paste0(round(pct,2), '%')),
vjust=1, # if flipping 'hjust'
hjust=1,
size = 3)
# wanna flip the plot?
plot6 + coord_flip()
plot6 = plot5 + geom_text(aes(y = pct ,
label = paste0(round(pct,2), '%')),
vjust=1, # if flipping 'hjust'
hjust=1.2,
size = 3)
# wanna flip the plot?
plot6 + coord_flip()
plot6 = plot5 + geom_text(aes(y = pct ,
label = paste0(round(pct,2), '%')),
vjust=1, # if flipping 'hjust'
hjust=1,
size = 3)
# wanna flip the plot?
plot6 + coord_flip()
?reorder
#base GGPLOT2 starts with a "base", telling WHAT VARIABLES TO PLOT
tableFreq$locale
base= ggplot(data = tableFreq,
aes(x = locale,
y = pct))
#base GGPLOT2 starts with a "base", telling WHAT VARIABLES TO PLOT
tableFreq$locale <- factor(tableFreq$locale, levels = tableFreq$locale[order(tableFreq$pct)])
tableFreq$locale
base= ggplot(data = tableFreq,
aes(x = locale,
y = pct))
tableFreq=as.data.frame(ToPlot)
names(tableFreq)=c("locale","pct")
#you have:
tableFreq
library(ggplot2)
#base GGPLOT2 starts with a "base", telling WHAT VARIABLES TO PLOT
tableFreq$locale <- factor(tableFreq$locale, levels = tableFreq$locale[order(tableFreq$pct)])
base= ggplot(data = tableFreq,
aes(x = locale,
y = pct))
plot1 = base + geom_bar(fill ="gray",
stat = "identity") # y is just what it is!
plot1
plot2 = plot1 + labs(title=titleText2,
x =NULL,
y = NULL,
caption = sourceText)
plot2
plot3 = plot2 + geom_hline(yintercept = 25, #where
linetype="dashed",
size=1.5, #thickness
alpha=0.5) #transparency
plot3
library(scales)
# customize Y axis
plot4 = plot3 + scale_y_continuous(breaks=c(0,10, 25,40,50),
limits = c(0, 50), # expand = c(0, 0),
labels=scales::unit_format(suffix = '%'))
plot4
plot5 = plot4 + theme(panel.background = element_rect(fill = "white",
colour = "grey50"),
plot.caption = element_text(hjust = 0), # default was 1
plot.title = element_text(hjust = 0.5))
plot5
plot6 = plot5 + geom_text(aes(y = pct ,
label = paste0(round(pct,2), '%')),
vjust=1, # if flipping 'hjust'
hjust=1,
size = 3)
# wanna flip the plot?
plot6 + coord_flip()
?sort
###
ToPlotOrd=sort(ToPlot, decreasing = TRUE)
###
par(mgp=c(1,0.5,0)) # distance label, tickText,tick
location=barplot(ToPlotOrd,
col = paletteHereNew,
border=NA,
main=titleText2,
xlim=c(0,50),
xlab = '(in %)',
horiz = T,
cex.names = 0.7,
cex.lab=0.6,
xaxt="n") # no x-axis, so I customize it below...
text(x=ToPlotOrd,y=location,labels=plotLabels,pos = 2,cex = 0.7)
title(sub=sourceText, adj=0,cex.sub=0.7,line = 3)
# reference line
abline(v=25,lty=3,lwd=3)
# customizong tick values
xtick<-c(0,10,25,40,50)
axis(side=1, at=xtick, labels = xtick,cex.axis=0.8)
#base GGPLOT2 starts with a "base", telling WHAT VARIABLES TO PLOT
tableFreq$locale <- factor(tableFreq$locale, levels = tableFreq$locale[order(-tableFreq$pct)])
base= ggplot(data = tableFreq,
aes(x = locale,
y = pct))
plot1 = base + geom_bar(fill ="gray",
stat = "identity") # y is just what it is!
plot1
?geom_bar
tableFreq=as.data.frame(ToPlot)
names(tableFreq)=c("locale","pct")
#you have:
tableFreq
library(ggplot2)
#base GGPLOT2 starts with a "base", telling WHAT VARIABLES TO PLOT
tableFreq = tableFreq[order(tableFreq$pct),]
#tableFreq$locale <- factor(tableFreq$locale, levels = tableFreq$locale[order(-tableFreq$pct)])
base= ggplot(data = tableFreq,
aes(x = locale,
y = pct))
plot1 = base + geom_bar(fill ="gray",
) # y is just what it is!
plot1
plot1 = base + geom_bar(fill ="gray"
) # y is just what it is!
plot1
plot1 = base + geom_bar(fill ="gray",
stat = "identity") # y is just what it is!
plot1
tableFreq=as.data.frame(ToPlot)
names(tableFreq)=c("locale","pct")
#you have:
tableFreq
library(ggplot2)
#base GGPLOT2 starts with a "base", telling WHAT VARIABLES TO PLOT
tableFreq$locale <- factor(tableFreq$locale, levels = tableFreq$locale[order(-tableFreq$pct)])
base= ggplot(data = tableFreq,
aes(x = locale,
y = pct))
plot1 = base + geom_bar(fill ="gray",
stat = "identity") # y is just what it is!
plot1
plot2 = plot1 + labs(title=titleText2,
x =NULL,
y = NULL,
caption = sourceText)
plot2
plot3 = plot2 + geom_hline(yintercept = 25, #where
linetype="dashed",
size=1.5, #thickness
alpha=0.5) #transparency
plot3
library(scales)
# customize Y axis
plot4 = plot3 + scale_y_continuous(breaks=c(0,10, 25,40,50),
limits = c(0, 50), # expand = c(0, 0),
labels=scales::unit_format(suffix = '%'))
plot4
plot5 = plot4 + theme(panel.background = element_rect(fill = "white",
colour = "grey50"),
plot.caption = element_text(hjust = 0), # default was 1
plot.title = element_text(hjust = 0.5))
plot5
plot6 = plot5 + geom_text(aes(y = pct ,
label = paste0(round(pct,2), '%')),
vjust=1, # if flipping 'hjust'
hjust=1,
size = 3)
# wanna flip the plot?
plot6 + coord_flip()
###
ToPlotOrd=sort(ToPlot, decreasing = TRUE)
###
par(mgp=c(1,0.5,0)) # distance label, tickText,tick
location=barplot(ToPlotOrd,
col = paletteHereNew,
border=NA,
main=titleText2,
xlim=c(0,50),
xlab = '(in %)',
horiz = T,
cex.names = 0.7,
cex.lab=0.6,
xaxt="n") # no x-axis, so I customize it below...
text(x=ToPlotOrd,y=location,labels=plotLabels,pos = 2,cex = 0.7)
title(sub=sourceText, adj=0,cex.sub=0.7,line = 3)
# reference line
abline(v=25,lty=3,lwd=3)
# customizong tick values
xtick<-c(0,10,25,40,50)
axis(side=1, at=xtick, labels = xtick,cex.axis=0.8)
tableFreq[order(-tableFreq$pct),]
plot6 = plot5 + geom_text(aes(y = pct ,
label = paste0(round(pct,2), '%')),
vjust=1, # if flipping 'hjust'
hjust=1,
size = 3)
# wanna flip the plot?
plot6 + coord_flip()
###
ToPlotOrd=sort(ToPlot, decreasing = TRUE)
###
par(mgp=c(1,0.5,0)) # distance label, tickText,tick
location=barplot(ToPlotOrd,
col = paletteHereNew,
border=NA,
main=titleText2,
xlim=c(0,50),
xlab = '(in %)',
horiz = T,
cex.names = 0.7,
cex.lab=0.6,
xaxt="n") # no x-axis, so I customize it below...
text(x=ToPlotOrd,y=location,labels=plotLabels,pos = 2,cex = 0.7)
title(sub=sourceText, adj=0,cex.sub=0.7,line = 3)
# reference line
abline(v=25,lty=3,lwd=3)
# customizong tick values
xtick<-c(0,10,25,40,50)
axis(side=1, at=xtick, labels = xtick,cex.axis=0.8)
library(ggplot2)
tableFreq=as.data.frame(ToPlot)
names(tableFreq)=c("locale","pct")
#you have:
tableFreq
library(ggplot2)
#base GGPLOT2 starts with a "base", telling WHAT VARIABLES TO PLOT
tableFreq$locale <- factor(tableFreq$locale, levels = tableFreq$locale[order(-tableFreq$pct)])
base= ggplot(data = tableFreq,
aes(x = locale,
y = pct))
plot1 = base + geom_bar(fill ="gray",
stat = "identity") # y is just what it is!
plot1
plot2 = plot1 + labs(title=titleText2,
x =NULL,
y = NULL,
caption = sourceText)
plot2
plot3 = plot2 + geom_hline(yintercept = 25, #where
linetype="dashed",
size=1.5, #thickness
alpha=0.5) #transparency
plot3
library(scales)
# customize Y axis
plot4 = plot3 + scale_y_continuous(breaks=c(0,10, 25,40,50),
limits = c(0, 50), # expand = c(0, 0),
labels=scales::unit_format(suffix = '%'))
plot4
plot5 = plot4 + theme(panel.background = element_rect(fill = "white",
colour = "grey50"),
plot.caption = element_text(hjust = 0), # default was 1
plot.title = element_text(hjust = 0.5))
plot5
plot6 = plot5 + geom_text(aes(y = pct ,
label = paste0(round(pct,2), '%')),
vjust=1, # if flipping 'hjust'
hjust=1,
size = 3)
# wanna flip the plot?
plot6 + coord_flip()
###
ToPlotOrd=sort(ToPlot, decreasing = TRUE)
###
par(mgp=c(1,0.5,0)) # distance label, tickText,tick
location=barplot(ToPlotOrd,
col = paletteHereNew,
border=NA,
main=titleText2,
xlim=c(0,50),
xlab = '(in %)',
horiz = T,
cex.names = 0.7,
cex.lab=0.6,
xaxt="n") # no x-axis, so I customize it below...
text(x=ToPlotOrd,y=location,labels=plotLabels,pos = 2,cex = 0.7)
title(sub=sourceText, adj=0,cex.sub=0.7,line = 3)
# reference line
abline(v=25,lty=3,lwd=3)
# customizong tick values
xtick<-c(0,10,25,40,50)
axis(side=1, at=xtick, labels = xtick,cex.axis=0.8)
tableFreq[order(-tableFreq$pct),]
